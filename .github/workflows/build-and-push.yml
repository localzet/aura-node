name: Build & Push Docker Image

on:
  push:
    tags:
      - '*'

jobs:
  send-start-deploy-telegram-message:
    name: 📢 Send Telegram message
    runs-on: ubuntu-latest
    steps:
      - name: 🔧 Checkout source code
        uses: actions/checkout@v4

      - name: 📬 Send Telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            🏹 Начало деплоя пакета ${{ github.REPOSITORY }}
            Коммит: ${{ github.event.head_commit.message }}
            Автор: ${{ github.event.head_commit.author.name }}
            Время: ${{ github.event.head_commit.timestamp }}

  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - name: 🔧 Checkout source code
        uses: actions/checkout@v4

      - name: 🔧 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'

      - name: 🔧 Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: 🔧 Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 🔧 Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🔧 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 📤 Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            localzet/aura-node:latest
            localzet/aura-node:${{github.ref_name}}
            ghcr.io/localzet/aura-node:latest
            ghcr.io/localzet/aura-node:${{github.ref_name}}

  create-release:
    needs: [build-docker-image]
    runs-on: ubuntu-latest
    steps:
      - name: NewTag
        id: tag
        uses: JinoArch/get-latest-tag@latest

      - name: Create Release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: v${{ github.ref_name }}
          generate_release_notes: true
          append_body: true
          make_latest: true
          draft: false
          prerelease: false
          body: |
            🚀 Autogenerated release v${{ github.ref_name }}

            📝 Compare changes: [${{ steps.tag.outputs.previousTag }}...${{ steps.tag.outputs.latestTag }}](https://github.com/${{ github.repository }}/compare/${{ steps.tag.outputs.previousTag }}...${{ steps.tag.outputs.latestTag }})

            Latest Docker image:
            - `localzet/aura-node:latest`
            - `ghcr.io/localzet/aura-node:latest`

            Docker images:
            - `localzet/aura-node:${{github.ref_name}}`
            - `ghcr.io/localzet/aura-node:${{github.ref_name}}`

  send-telegram-message:
    name: 📢 Send Telegram message
    needs: [build-docker-image, create-release]
    runs-on: ubuntu-latest
    steps:
      - name: 🔧 Checkout source code
        uses: actions/checkout@v4

      - name: 📬 Send Telegram message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ✅ Пакет ${{ github.REPOSITORY }} успешно опубликован
            Тег: *${{ github.sha }}*
            Коммит: ${{ github.event.head_commit.message }}
            Автор: ${{ github.event.head_commit.author.name }}
            Время: ${{ github.event.head_commit.timestamp }}

  notify-on-error:
    name: 📢 Send Telegram message
    runs-on: ubuntu-latest
    needs: [build-docker-image]
    if: failure()
    steps:
      - name: 🔧 Checkout source code
        uses: actions/checkout@v4

      - name: 🚨 Send error notification
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ❌ Ошибка в ${{ github.REPOSITORY }}: проблемы в сборке
